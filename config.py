import logging
import os
from dotenv import load_dotenv

# Загружаем переменные окружения из .env файла
load_dotenv()

API_TOKEN = os.getenv("BOT_TOKEN")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")

# Настройки для семантического анализа дефектов
SEMANTIC_SCORE_THRESHOLD = 0.4  # Порог схожести для отбора релевантных страниц  
SEMANTIC_TOP_PAGES_LIMIT = 10    # Максимальное количество страниц для анализа

# Utterances для поиска дефектов в строительных отчетах
DEFECT_SEARCH_UTTERANCES = [
    "В квартире обнаружены серьезные нарушения гидроизоляции в санузле",
    "Экспертиза выявила некачественную укладку напольной плитки с отклонениями",
    "Застройщик использовал материалы не соответствующие проектной документации",
    "Обнаружены трещины в несущих стенах из-за нарушения технологии строительства",
    "Система вентиляции работает неэффективно, не обеспечивает нормативный воздухообмен",
    "Электропроводка проложена с нарушениями ПУЭ, создает пожарную опасность",
    "Окна установлены с зазорами, отсутствует герметизация монтажных швов",
    "Стяжка пола выполнена некачественно, имеются неровности более 7мм на метр",
    "Отопительная система смонтирована с нарушениями, батареи греют неравномерно",
    "Потолки имеют видимые дефекты штукатурки и следы протечек",
    "Входная дверь установлена с перекосом, не обеспечивает плотное закрывание",
    "Сантехника подключена неправильно, обнаружены течи в скрытых соединениях",
    "Балконное остекление выполнено с браком, нарушена геометрия конструкции",
    "Звукоизоляция между квартирами не соответствует нормативным требованиям",
    "Фасадная отделка имеет дефекты, возможно отслоение материала в будущем",
    "Отклонение от вертикали поверхностей стен более допустимых норм",
    "Неровности и уступы напольного покрытия превышают технические требования",
    "Дефекты лакокрасочного покрытия: пятна, подтеки, неравномерность нанесения",
    "Сколы и повреждения керамической плитки в местах эксплуатации",
    "Нарушения в монтаже дверных и оконных конструкций"
]

# Настройки для VLM обработки страниц
VLM_MODEL = "gpt-4.1-mini"              # Модель для Vision Language Model

# Настройка базового логирования
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.StreamHandler()
    ]
)

# Создаем логгер для бота
logger = logging.getLogger(__name__)